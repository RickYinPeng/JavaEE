<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="yp.itcast.domain">	
	<class name="Customer" table="cst_customer">
		<id name="cust_id" column="cust_id">
		<!-- generator:主键生成策略 ，就是每条记录录入时，主键的生成策略（7个）
				identity：主键自增.由数据库来维护主键值，录入时不需要指定主键
				increment（了解）:主键自增，由hibernate来维护，每次插入前会先查询表中id最大值。+1作为新主键值.
						注意：在正式开发中不能使用increment，存在线程安全问题
				sequence：Oracle中的主键生成策略
				hilo：高低位算法（数据库中主键自增使用的就是这种算法）。：主键自增，由hibernate来维护（开发时不使用）
				native：	hilo+sequence+identity（自动三选一策略）（方便，省的换库的时候再改）
				uuid：产生随机字符串作为主键。（前提：主键类型必须为String类型）
				assigned：自然主键生成策略。hibernate不会管理主键值，由开发人员自己录入
		-->
			<generator class="native"></generator>
		</id>
		<property name="cust_name" column="cust_name">
			<!-- <column name="cust_name" sql-type="varchar"></column> -->
		</property>
		<property name="cust_source" column="cust_source"></property>
		<property name="cust_industry" column="cust_industry"></property>
		<property name="cust_level" column="cust_level"></property>
		<property name="cust_linkman" column="cust_linkman"></property>		
		<property name="cust_phone" column="cust_phone"></property>
		<property name="cust_mobile" column="cust_mobile"></property>

	</class>
</hibernate-mapping>
