package yp.itcast.dao.impl;

import java.util.List;

import javax.annotation.Resource;

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Restrictions;
import org.springframework.orm.hibernate5.HibernateCallback;
import org.springframework.orm.hibernate5.HibernateTemplate;
import org.springframework.orm.hibernate5.support.HibernateDaoSupport;
import org.springframework.stereotype.Repository;

import com.opensymphony.xwork2.util.fs.Revision;

import yp.itcast.dao.UserDao;
import yp.itcast.domain.User;

//HibernateDaoSupport 为dao注入sessionFactory
@Repository("userDao")
public class UserDaoImpl extends BaseDaoImpl<User> implements UserDao {

	//有技术含量
	@Resource(name="sessionFactory")
	public void setSF(SessionFactory sf){
		super.setSessionFactory(sf);
	}
	
	public User getByUserCode(final String usercode) {
		//HQL
		User user = getHibernateTemplate().execute(new HibernateCallback<User>() {

			public User doInHibernate(Session session) throws HibernateException {
				String hql = "from User where user_code=?";
				Query query = session.createQuery(hql);
				
				query.setParameter(0, usercode);
				
				User user = (User) query.uniqueResult();
				
				return user;
			}
		});
		return user;
		
		//Criteria
		
		/*DetachedCriteria dc = DetachedCriteria.forClass(User.class);
		
		dc.add(Restrictions.eq("user_code", usercode));
		
		List<User> list = (List<User>) getHibernateTemplate().findByCriteria(dc);
		
		if(list!=null && list.size()>0){
			return list.get(0);
		}else{
			return null;
		}*/
	}

/*	
	public void save(User u) {
		getHibernateTemplate().save(u);
	}*/


}
